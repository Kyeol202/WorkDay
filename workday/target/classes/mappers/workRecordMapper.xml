<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="WorkRecord">
	<!--#######공통 부분 start######## -->
	<sql id="pagingHeader">
	SELECT * FROM (
	SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	
	<sql id="pagingFooter">
	)  A
	) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
	
	<sql id="search">
		<choose>
		<when test="searchSort !=''">
		AND ${searchSort} LIKE '%' || #{searchVal} || '%'
		</when>
		</choose>
	</sql>
	<!--#######공통 부분 end######## -->
	
<!-- 	출근 입력(정상) -->
	<insert id="userWorkIn" parameterType="WorkRecord">
	INSERT INTO WORK_RECORD(
	W_ID,
	U_ID,
	D_ID,
	W_IN,
	W_STATUS
	)
	VALUES(
	WORK_RECORD_SEQ.NEXTVAL,
	#{u_id},
	#{d_id},
	TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'),
	DEFAULT
	)
	</insert>
	
<!-- 	출근 중복 체크 -->
	<select id="userWorkInCheck" parameterType="WorkRecord" resultType="int">
	SELECT COUNT(*)
	FROM WORK_RECORD
	WHERE U_ID = #{u_id} AND W_IN LIKE TO_CHAR(SYSDATE, 'YYYY-MM-DD%')
	
	</select>
	
<!-- 	출근 입력(지각) -->
	<insert id="userWorkLate" parameterType="WorkRecord">
	INSERT INTO WORK_RECORD(
	W_ID,
	U_ID,
	D_ID,
	W_IN,
	W_STATUS
	)
	VALUES(
	WORK_RECORD_SEQ.NEXTVAL,
	#{u_id},
	#{d_id},
	TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI'),
	'L'
	)
	
	</insert>
	
	
<!-- 	출퇴근 전체 리스트 -->
	<select id="inOutAllList" resultType="WorkRecord">
	SELECT *
	FROM WORK_RECORD
	</select>
	

<!-- 	출근 전체 리스트(페이징) -->

	<select id="selectUserAllList" resultType="JoinDto" parameterType="BoardPager">
		<include refid="pagingHeader"></include>
		SELECT W.W_ID, W.W_IN, W.W_OUT, W.W_TIME, W.D_ID, U.U_ID, U.U_NAME,W_STATUS
		FROM WORK_RECORD W
		JOIN USER_INFO U
		ON U.U_ID = W.U_ID
		WHERE 1 = 1
		<include refid="search"></include>
		ORDER BY W.W_IN DESC
		<include refid="pagingFooter"></include>
	</select>
	
	<!-- 레코드 총 갯수 -->
	<select id="selectUserCount" parameterType="SearchDto" resultType="int">
	SELECT COUNT(*)
	FROM WORK_RECORD
	WHERE 1 = 1
	<include refid="search"></include>
	</select>
	
	<!-- 상세보기 -->
	<select id="workRecordSelectOne" parameterType="int" resultType="WorkRecord">
	SELECT W_IN, W_OUT, ROUND(W_TIME, 2) AS W_TIME, W_STATUS, W_REASON, W_ID
	FROM WORK_RECORD
	WHERE W_ID = #{w_id}
	</select>
	
	<!-- 퇴근시간 입력 -->
	<update id="userWorkOut" parameterType="WorkRecord">
	UPDATE WORK_RECORD
	SET W_OUT = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI')
	WHERE W_ID = #{w_id}
	
	</update>
	
	<!-- 근무시간 계산 -->
	<update id="updateWTime" parameterType="WorkRecord">
	UPDATE WORK_RECORD
	SET W_TIME = (SELECT (
	TO_DATE(W_OUT, 'YYYY-MM-DD HH24:MI') -
	TO_DATE(W_IN, 'YYYY-MM-DD HH24:MI')
	)*24*60
	FROM WORK_RECORD
	WHERE W_ID = #{w_id} )
	WHERE W_ID = #{w_id}
	</update>
	
	<!-- 사용자 상태 업데이트 -->
	<update id="statusReasonUpdate" parameterType="WorkRecord">
	UPDATE WORK_RECORD
	SET W_STATUS = #{w_status}, W_REASON = #{w_reason}
	WHERE W_ID = #{w_id}
	</update>
	
<!-- 	사용자 근무기록 삭제 -->
	<delete id="userWorkDelete" parameterType="int">
	DELETE FROM WORK_RECORD
	WHERE W_ID = #{w_id}
	
	</delete>
	
	
<!-- 	인서트 중복 방지 -->
	<select id="insertCheck" resultType="WorkRecord">
	SELECT *
	FROM WORK_RECORD
	WHERE W_ID = #{w_id} AND U_ID = #{u_id}
	</select>
	
	
</mapper>